JQuery
一、学习重点
    1、熟练背诵JQuery选择器过滤器语法
    2、熟练掌握JQuery对象所提供的功能函数
二、JQuery学习方式
    1、理论
    2、练习
三、JQuery
是JS封装版
用于简化JS对DOM对象的定位以及对DOM对象属性操作开发步骤
DOM编程：全选和取消全选的弊端
    1、JS中定位DOM对象的命令document.getElementById("idname");过于冗长2
    2、JS定位DOM对象的方式过于单一
    3、JS中对定位中DOM对象的的操作过于繁琐
四、使用
    1、下载JQuery工具文件并导入到工程中
    2、将jquery文件加载到网页上
五、DOM和JQuery对象的区别
    1、DOM是文档对象模型，在浏览器去加载网页时由浏览器创建，一个浏览器标签对应一个DOM对象，
    通过管理DOM对象对所关联的HTML标签中的属性进行操作
    2、JQuery：是由JQuery函数来负责创建，以$开始的函数，JQuery对象就是一个数组，JQuery对象中存放的的是本次所定位的DOM
    对象，通过JQuery对象功能函数快速地对所定位的DOM对象进行操作与管理，JQuery对象名称一般以$为开头
六、JQuery对象与DOM对象快速转换
    1、将JQuery转换成DOM对象：
        通过循环从数组中取出DOM对象，从数组中提取数据
        for(var i = 0;i < $obj.length;i ++){
            var domObj = $obj[i];
        }
    2、将DOM对象转换成JQuery对象
        本质是将DOM对象添加到数组中
        var $obj = $(domObj);//可以通过标签、id、类名和DOM对象名获取JQuery对象
        
        注意：JQuery和DOM对象之间的属性和函数不可以相互调用

-----------------------------------------------------------------------------------------------------------------

一、JQuery中的选择器语法
    1、什么是选择器语法？
        对DOM对象进行定位的条件，比如根据id、标签、类名等
    2、JQuery中只有三种选择器
二、基本选择器
    1、定位条件：可以根据id、标签类型名、标签采用的样式选择器：类名、id、标签名
    2、使用：
        $("#idName")：代替document.getElementById("idName");
        根据id编号去定位的DOM对象保存到一个数组中并返回，返回一个JQuery对象

        $(".样式选择器的名称")：代替document.getElementsByClassName("类名");
        将使用了指定样式选择器的DOM对象保存到同一个数组中并返回，返回的这个数组就是JQuery对象

        $("标签类型名")：代替document.getElementByTagName("标签类型名")；
        将所有指定标签类型所关联的DOM对象保存到数组中并返回，返回的这个数组就是JQuery对象

        $("*")：选择所有DOM对象，定位浏览器中所有DOM对象

        组合选择器
        $("条件1，条件2……")：只要DOM对象满足其中一种条件就会被定位到JQuery对象中，详单与mysql中的或
三、层级选择器
    1、可以根据标签之间的父子关系定位
    可以根据标签之间的兄弟关系定位

    2、标签之间的关系：
        父子关系：包含关系，直接子标签和间接子标签
        兄弟关系：两个标签拥有相同的父标签，并且彼此之间没有包含关系
    3、使用
        $("定位父标签条件>定位子标签的条件")
        定位当前父标签下满足条件的所有直接子标签

        $("定位父标签条件 定位子标签条件")
        定位当前父标签下，所有满足条件的直接子标签和间接子标签

        $("定位当前标签的条件~定位兄弟标签的条件")；
        定位当前标签后面所有满足条件的兄弟标签

        $("定位当前标签定位条件+定位兄弟标签的条件")；
        定位当前标签后面与之紧邻的兄弟标签

        $("定位当前标签的条件").siblings("定位兄弟标签的条件")；
        定位当前标签前面和后面所有满足条件的兄弟标签
四、INPUT标签选择器
    1、input标签组成
    2、input标签的作用：作为浏览器向网站发送请求时作请求参数的s
    3、使用：$(":type属性名字");
        比如：
        $(":button")定位页面中所有button关联的DOM
        $(":table")什么都定位不到，因为input的type里面没有table

-----------------------------------------------------------------------------------------------

一、JQuery过滤器，基本过滤器
    1、过滤器对已经定位到JQuery对象中的DOM对象进行二次过滤筛选
    2、过滤器不能独立使用，必须声明在选择器后面
    3、共六种过滤器：
        三种常用的过滤器：
        可以将多个过滤器放到同一个JQuery函数中，进行层层过滤

二、基本过滤器
    1、过滤条件：根据已经定位的DOM对象在JQuery对象中存储的位置进行二次过滤筛选
    2、使用：
        $("选择器:first"):留下满足条件的第一个DOM对象
        比如：$(":button:first");定位页面中的第一个button

        $("选择器:last")：留下满足条件的最后一个DOM对象
        比如：$(":button:last");定位页面中的最后一个button

        $("选择器:eq(下标值)")：留下满足条件的指定位置的DOM对象
        比如：$(":button:eq(3)");定位页面中满足条件的第四个button下标从0开始

        $("选择器:lt(下标值)"):留下满足条件中的指定位置之前的所有DOM对象，一次可能返回多个
        比如：$(":checkbox:lt(2)");返回下标为0，1的两个DOM对象

        $("选择器:gt(下标值)")：留下满足条件的指定该位置之后的所有DOM对象，一次可能返回多个
        比如：$("button:gt(2)");位置在第三个button之后的所有button

三、基本属性过滤器
    1、过滤条件，根据标签在声明时是否为指定属性进行手动赋值
                根据标签的属性内容与指定内容关系进行过滤
    2、例子：
                <input>1</input>
                <input type = "text" name = "two">2</input>
                <input type = "text" name = "three">3</input>
                问题一：哪一个div中没有name属性：
                都有name属性，只是第一个没有手动赋值
                所有div标签里面都有name属性，

                问题二：哪一个div的name属性值是“”
                第一个，因为没有手动赋值默认就是“”
    3、使用：
                $("选择器[属性名]")：留下满足定位条件的并且在声明时为指定属性进行手动赋值的DOM对象
                例子：$("input[name]");找到第二个和第三个input标签，注意div没有name属性，但是可以自己设一个

                $("选择器[属性名='值']")：留下定位条件并且指定属性的内容等于指定内容的DOM对象
                例子：$("input[name = 'two']");$("input[name = '']");$("input[name != 'two']");

                以下类似于MySQl的模糊查询
                $("选择器[属性名^='值']")：留下满足条件的并且指定属性内容以指定内容为开头的所有DOM对象
                例子：$("input[name^='t']");返回第二三两个DOM对象

                $("选择器[属性名$='值']")：留下满足条件的并且指定属性内容以指定内容为结尾的所有DOM对象

                $("选择器[属性名*='值']")：留下满足条件的并且指定属性内容包含指定内容的所有DOM对象

                $("选择器[属性名1][属性名2*='值'][属性名3^='值']")：层层过滤

四、工作状态属性过滤器
    1、html标签属性分类
        基本属性：绝大多数标签都拥有的属性：id、name、title、rowspan
        样式属性：背景、字体、边框
        value属性：只存在于表单域标签中：input、select、textarea
        工作状态属性：只存在于表单域标签中：checked、disabled、selected
        监听事件属性：onclick、onchange
    2、使用
        $("选择器:enabled");留下了满足条件的并且处于可用状态的DOM对象

        $("选择器:disabled");留下满足条件的并且处于不可用状态的选择器

        $("选择器:checked");留下满足条件的并且处于选中状态的DOM对象
            表单中只有radio和checkbox有这个工作状态
        
        $("选择器:selected");留下满足条件的并且处于选中状态的DOM对象
            表单中只有select里面的子标签option有selected这个工作状态

---------------------------------------------------------------------------------------------------

一、JQuery对象中的功能函数
    1、show（）&hide（）
    show（）：负责让JQuery对象包含的所有DOM对象关联的标签在浏览器上展示出来 style = “display：block”
    hide（）：负责让JQuery对象包含的所有DOM对象关联的标签在浏览器上隐藏起来 style = “display：none”

    2、remove（）&empty（）
    remove（）：将当前标签及其子标签一并删除
    empty（）：将当前标签子标签进行清楚处理

    3、append（）&appendTo（）
    共同点：都是操作标签中innerHTML，为当前标签添加子标签
    append（）：父标签.append（子标签），父亲给自己找了一个儿子
    appendTo（）：子标签.appendTo(父标签)，儿子给自己找了一个爹

    4、属性操作函数val（）
    val函数：$obj.val(),读取jquery对象中第一个DOM对象的value属性值
            $obj.val("值")，为jquery对象中所有DOM对象的value属性进行统一赋值
    prop函数：工作状态属性，selected、disabled、checked
            $obj.prop("checked",true),为jquery对象中所有DOM对象的checked属性值进行赋值为true
            $obj.prop("checked")，读取jquery对象中第一个DOM对象checked属性的值
    attr函数：基本属性，id、name、title、rowspan等
            $obj.attr("name","ck")：为jquery对象那个中所有DOM对象的name属性统一赋值为ck
            $obj.attr("title")：读取jquery对象中第一个DOM对象的title属性的值
    text函数：操作innerText属性，管理双目标签的文本显示内容
            $obj.text("123")：为jquery对象中所有DOM文本内容innmerText赋值为“123”
            $obj.text()：取jquery对象中所有DOM对象的innerText属性内容，拼接为一个字符串返回


------------------------------------------------------------------------------------------------------

一、jquery中的事件绑定方式
JS中事件绑定方式有两种：嵌入式绑定，一次只能为一个标签绑定
                      基于DOM对象的绑定方式，缺点需要开发人员自行遍历数组绑定监听事件
二、jquery中的事件绑定方式   
    1、$obj.jquery监听事件函数（处理函数）
    例子：$(":button").click(fun);为所有类型为button的input标签绑定onclick及对应的处理函数fun
    html监听事件名称                jquery监听事件函数
    onclick                        $(":button").click(fun);
    onchange                       $(":button").click(fun);
    onmouseover                    $(":button").mouseover(fun);
    jquery监听事件函数名字就是html监听事件名去掉on
    2、$obj.bind("jquery监听事件函数名称",处理函数);以这种方式所绑定的监听事件是可以解除的
    $obj.unbind("jquery监听事件函数名称");将监听事件从DOM对象身上移除
    $obj.unbind();将所有监听事件从DOM对象身上移除,两种方式绑定都可以解除绑定

                      





